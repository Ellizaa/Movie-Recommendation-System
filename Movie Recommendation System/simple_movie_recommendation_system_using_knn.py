# -*- coding: utf-8 -*-
"""Simple Movie Recommendation System using KNN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W2rOEx4liS1w5flXt_zoqjLBoSeAYlkc
"""

import numpy as np
import pandas as pd
import difflib
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.neighbors import NearestNeighbors

# Read the dataset
movies_data = pd.read_csv('/content/movies.csv')
#movies_data.head()

# Data cleaning
selected_features = ['title','genres','cast','keywords','director','original_language']
for feature in selected_features:
  movies_data[feature] = movies_data[feature].fillna('')

# Making the model
combined_features = movies_data['title']+' '+movies_data['genres']+' '+movies_data['cast']+' '+movies_data['keywords']+' '+movies_data['director']+' '+movies_data['original_language']
#print(combined_features)

# Vectorization
vectorizer = TfidfVectorizer()
feature_vectors = vectorizer.fit_transform(combined_features)
#print(feature_vectors)

# Setting up KNN with cosine distance
knn_model = NearestNeighbors(metric='cosine', algorithm='brute')
knn_model.fit(feature_vectors)

# Receiving the input
movie_name = input(' Enter your favourite movie name : ')

# Finding the matched movie title
list_of_all_titles = movies_data['title'].tolist()
find_close_match = difflib.get_close_matches(movie_name, list_of_all_titles)
close_match = find_close_match[0]

# Converting into index
index_of_the_movie = movies_data[movies_data.title == close_match]['index'].values[0]

# Find K nearest neighbors
distances, indices = knn_model.kneighbors(feature_vectors[index_of_the_movie], n_neighbors=11)

# Exclude the first one as it is the input movie itself
recommended_movie_indices = indices.flatten()[1:]

# Display movie titles based on knn model
print('\n Movies suggested for you : \n')

for i, index in enumerate(recommended_movie_indices, start=1):
  title_from_index = movies_data[movies_data.index == index]['title'].values[0]
  print(i, '.',title_from_index)